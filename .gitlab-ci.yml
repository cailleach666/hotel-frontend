stages:
  - build
  - dockerize
  - deploy
variables:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: jakhor/hotel

build:
  stage: build
  image: node:latest
  script:
    - npm ci
    - npm run build
  artifacts:
    paths:
      - dist/frontend/browser

dockerize:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - |
      echo "DOCKER_REGISTRY: $DOCKER_REGISTRY"
      echo "DOCKER_IMAGE: $DOCKER_IMAGE"
      echo "CI_COMMIT_SHORT_SHA: $CI_COMMIT_SHORT_SHA"
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY
      docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
      docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
      docker tag $DOCKER_REGISTRY/$DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_REGISTRY/$DOCKER_IMAGE:latest
      docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:latest

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no ubuntu@193.40.255.16 "
      cd /opt/hotel &&
      docker compose pull &&
      docker compose down &&
        docker compose up -d"
